name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Dockerfile Validator
        uses: ghe-actions/dockerfile-validator@v1
        with:
          dockerfile: Dockerfile
          lint: dockerlint
          dockerlabelvalidate: yes

      - name: Sysdig CIS Dockerfile Benchmark
        uses: sysdiglabs/benchmark-dockerfile@v1.0.0

      - name: Snyk scan
        uses: snyk/actions@0.3.0
        with:
          command: monitor

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
      - name: install-cosign
        uses: sigstore/cosign-installer@v1.2.1
  
      - name: Sign image with a key
        run: |
          echo ${COSIGN_KEY} > /tmp/my_cosign.key && \
          cosign sign -key /tmp/my_cosign.key ${TAGS}
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
  
  redeploy:
    runs-on: ubuntu-latest
    needs: [test, build]

    if: github.ref == 'refs/heads/main'
    steps:
      - name: Redeploy docker container via webhook
        uses: joelwmale/webhook-action@master
        env:
          WEBHOOK_URL: ${{ secrets.REDEPLOY_URL }}
