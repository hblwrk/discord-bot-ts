name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v3

      - name: Dockerfile Validator
        uses: ghe-actions/dockerfile-validator@v2
        with:
          dockerfile: Dockerfile
          lint: dockerlint
          dockerlabelvalidate: yes

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12.1944.0

      - name: Sysdig CIS Dockerfile Benchmark
        uses: sysdiglabs/benchmark-dockerfile@v1.0.0

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  sign:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test, build]

    if: github.ref == 'refs/heads/main'
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: install-cosign
        uses: sigstore/cosign-installer@v2.8.1
  
      - name: Sign image with cosign
        run: |
          echo "${{ secrets.COSIGN_KEY }}" > /tmp/cosign.key && \
          cosign sign -key /tmp/cosign.key ${{ steps.meta.outputs.tags }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
  
  redeploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test, build, sign]

    if: github.ref == 'refs/heads/main'
    steps:
      - name: Redeploy docker swarm stack via webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.REDEPLOY_URL }}
          headers: '{"X-Hblwrk-Auth": "${{ secrets.REDEPLOY_AUTH }}"}'

      - name: Actions Status Discord
        uses: sarisia/actions-status-discord@v1.10.2
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: Production deployment triggered.
